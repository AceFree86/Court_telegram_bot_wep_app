import time
from telegram.ext import Updater
from telegram import ParseMode
from config import TOKEN, MASTER
import sqlite3
import json

token = TOKEN
admin_id = MASTER
json_file = "data/data_pr.json"
sqlite_file = "subscriber.db"

conn = sqlite3.connect(sqlite_file)
cur = conn.cursor()
updater = Updater(token)


def send_msg(chat_id, message):
    updater.bot.send_message(chat_id=chat_id, text=message, parse_mode=ParseMode.HTML)


def check2(json_data, sql_data):
    result = []
    for client in sql_data:
        for check_data in json_data:
            if check_data["number"].find(client[1]) > -1:
                result.append((client, check_data))
    return result


def del_by_name(name):
    cur.execute(f'DELETE FROM list_pr WHERE case_involved="{name}"')
    conn.commit()


def main():
    with open(json_file, "r", encoding="utf-8") as f:
        json_data = json.load(f)

    cur.execute("SELECT * FROM list_pr")
    clients = cur.fetchall()
    res2 = check2(json_data, clients)

    for row, i in res2:

        msg = (
            f"üëã –î–æ–±—Ä–æ–≥–æ –¥–Ω—è!\n–ó–∞–ø–∏—Ç –∑–∞ –Ω–æ–º–µ—Ä–æ–º —Å–ø—Ä–∞–≤–∏ <b>{row[1]}</b>, –∑–Ω–∞–π–¥–µ–Ω–æ:"
            f"\n–ü–µ—Ä–µ—á–∏–Ω—Å—å–∫–∏–π —Ä–∞–π–æ–Ω–Ω–∏–π —Å—É–¥\n"
            f"\n–î–∞—Ç–∞/–ß–∞—Å –∑–∞—Å—ñ–¥–∞–Ω–Ω—è:\n<b>{i['date']} –≥–æ–¥.</b>\n\n"
            f"–ù–æ–º–µ—Ä —Å–ø—Ä–∞–≤–∏: ‚Ññ {i['number']}\n–°—É–¥–¥—è:{i['judge']}\n\n"
            f"–°—Ç–æ—Ä–æ–Ω–∏ –ø–æ —Å–ø—Ä–∞–≤—ñ:\n<b>{i['involved']}</b>\n\n"
            f"–°—É—Ç—å –ø–æ–∑–æ–≤—É:\n<b>{i['description']}</b>\n\n"
            f"üì≤ –¢–∞–∫–æ–∂ –ø–æ–¥–∏–≤–∏—Ç–∏—Å—è –¥–∞—Ç—É —Å—É–¥–æ–≤–æ–≥–æ –∑–∞—Å—ñ–¥–∞–Ω–Ω—è –º–æ–∂–Ω–∞ –Ω–∞ "
            f"\n–≤–µ–±–ø–æ—Ä—Ç–∞–ª—ñ https://pr.zk.court.gov.ua/."
            f"\n\n<b>–ü—ñ–¥–ø–∏—Å–∫–∞ –≤–∏–¥–∞–ª–µ–Ω–Ω–∞</b>üóë."
        )
        try:
            send_msg(row[0], msg)
            time.sleep(20)
        except Exception as ex:
            msg = f"–ù–µ–º–æ–∂–ª–∏–≤–æ {ex} –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:\n{msg}"
            send_msg(admin_id, msg)
        else:
            del_by_name(row[1])

    return res2


main()
